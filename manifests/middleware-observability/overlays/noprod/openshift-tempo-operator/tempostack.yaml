apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: simplest
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  retention:
    global:
      traces: 168h0m0s #Traces defines retention period. Supported parameter suffixes are "s", "m" and "h"
  observability:
    # grafana:
    #   createDatasource: true
    metrics:
      createServiceMonitors: true
  search:
    defaultResultLimit: 100
    maxDuration: 168h0m0s

  storageSize: 10Gi
  storage:
    secret:
      name: observability-s3
      type: s3
  #resources:
  #  total:
  #    limits:
  #      memory: 2Gi
  #      cpu: 2000m
  replicationFactor: 1
  template:
    compactor:
      replicas: 1
      nodeSelector:
        node-role.kubernetes.io/infra: ""
      tolerations:
        - key: "node-role.kubernetes.io/infra"
          operator: "Exists"
          effect: "NoSchedule"
    distributor:
      component:
        replicas: 1
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        tolerations:
          - key: "node-role.kubernetes.io/infra"
            operator: "Exists"
            effect: "NoSchedule"
      tls:
        enabled: false
    gateway:
      component:
        replicas: 1
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        tolerations:
          - key: "node-role.kubernetes.io/infra"
            operator: "Exists"
            effect: "NoSchedule"
      enabled: true
      ingress:
        route:
          termination: reencrypt
        type: route
      rbac:
        enabled: false
    ingester:
      replicas: 1
      nodeSelector:
        node-role.kubernetes.io/infra: ""
      tolerations:
        - key: "node-role.kubernetes.io/infra"
          operator: "Exists"
          effect: "NoSchedule"
    querier:
      replicas: 1
      nodeSelector:
        node-role.kubernetes.io/infra: ""
      tolerations:
        - key: "node-role.kubernetes.io/infra"
          operator: "Exists"
          effect: "NoSchedule"
    queryFrontend:
      component:
        replicas: 1
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        tolerations:
          - key: "node-role.kubernetes.io/infra"
            operator: "Exists"
            effect: "NoSchedule"
      jaegerQuery:
        enabled: true
        ingress:
          route: {}
        #ingress:
        #  route:
        #    termination: edge
        #  type: route
        monitorTab:
          enabled: true
          prometheusEndpoint: "https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"
        servicesQueryDuration: 168h0m0s
        tempoQuery: {}

  tenants:
    mode: openshift
    authentication:
      - tenantName: development
        tenantId: "1610b0c3-c509-4592-a256-a1871353dbf1"
      - tenantName: testing
        tenantId: "1610b0c3-c509-4592-a256-a1871353dbf2"
